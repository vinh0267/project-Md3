package ra.databinding.controller.admincontroller;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.ui.Model;import org.springframework.web.bind.annotation.*;import org.springframework.web.servlet.ModelAndView;import ra.databinding.model.dto.request.CategoryDto;import ra.databinding.model.dto.request.FormLogin;import ra.databinding.model.entity.Category;import ra.databinding.service.category.ICategoryService;import java.text.ParseException;import java.util.List;@Controller@RequestMapping(value = "/admin")public class CategoryController {    @Autowired    ICategoryService categoryService;    // hiển thị    @GetMapping("/category")    public String getCategory(Model model) {        List<Category> categoryList = categoryService.findAll();        model.addAttribute("categoryList", categoryList);        return "/admin/category/categories-list";    }    // hiển thị form    @GetMapping("/add-category")    public ModelAndView showAddCateForm() {        ModelAndView modelAndView = new ModelAndView("/admin/category/categories-add");        modelAndView.addObject("category", new CategoryDto());        return modelAndView;    }    // lưu lại    @PostMapping(value = "/addcategory")    public String save(@ModelAttribute("category") CategoryDto category) {        categoryService.saveCategoryDto(category);        return "redirect:/admin/category";    // Chuyển hướng đến trang danh sách category    }     //edit    @GetMapping("/edit-category/{id}")    public ModelAndView showEditCateForm(@PathVariable("id") String id) {        ModelAndView modelAndView = new ModelAndView("/admin/category/categories-edit");        try {            int idNo = Integer.parseInt(id);            modelAndView.addObject("category", categoryService.findById(idNo));        } catch (NumberFormatException ex) {            modelAndView.addObject("category", null);        }        return modelAndView;    }    @PostMapping(value = "/edit-category/{id}")    public String save(@ModelAttribute("category") Category category) {        categoryService.upDate(category);        return "redirect:/admin/category";    // Chuyển hướng đến trang danh sách category    }    // delete    @PostMapping("/delete-category/{id}")    public String deleteCategory(@PathVariable("id") int id) {        categoryService.remove(id);        return "redirect:/admin/category"; // . Chuyển hướng đến trang danh sách category    }}